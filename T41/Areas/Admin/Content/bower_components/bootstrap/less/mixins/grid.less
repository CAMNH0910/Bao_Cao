// Grid system
//
// Generate semantic grid columns with these mixins.

// Centered container element
.container-fixedgutter: @grid-gutter-width) {
  margin-right: auto;
  margin-left: auto;
  padding-left:  floor(gutter / 2));
  padding-right: ceil(gutter / 2));
  &:extend(.clearfix all);
}

// Creates a wrapper for a series of columns
.make-rowgutter: @grid-gutter-width) {
  margin-left:  ceil(gutter / -2));
  margin-right: floor(gutter / -2));
  &:extend(.clearfix all);
}

// Generate the extra small columns
.make-xs-columncolumns; @gutter: @grid-gutter-width) {
  position: relative;
  float: left;
  width: percentage(columns / @grid-columns));
  min-height: 1px;
  padding-left:  gutter / 2);
  padding-right: gutter / 2);
}
.make-xs-column-offsetcolumns) {
  margin-left: percentage(columns / @grid-columns));
}
.make-xs-column-pushcolumns) {
  left: percentage(columns / @grid-columns));
}
.make-xs-column-pullcolumns) {
  right: percentage(columns / @grid-columns));
}

// Generate the small columns
.make-sm-columncolumns; @gutter: @grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  gutter / 2);
  padding-right: gutter / 2);

  @media (min-width: @screen-sm-min) {
    float: left;
    width: percentage(columns / @grid-columns));
  }
}
.make-sm-column-offsetcolumns) {
  @media (min-width: @screen-sm-min) {
    margin-left: percentage(columns / @grid-columns));
  }
}
.make-sm-column-pushcolumns) {
  @media (min-width: @screen-sm-min) {
    left: percentage(columns / @grid-columns));
  }
}
.make-sm-column-pullcolumns) {
  @media (min-width: @screen-sm-min) {
    right: percentage(columns / @grid-columns));
  }
}

// Generate the medium columns
.make-md-columncolumns; @gutter: @grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  gutter / 2);
  padding-right: gutter / 2);

  @media (min-width: @screen-md-min) {
    float: left;
    width: percentage(columns / @grid-columns));
  }
}
.make-md-column-offsetcolumns) {
  @media (min-width: @screen-md-min) {
    margin-left: percentage(columns / @grid-columns));
  }
}
.make-md-column-pushcolumns) {
  @media (min-width: @screen-md-min) {
    left: percentage(columns / @grid-columns));
  }
}
.make-md-column-pullcolumns) {
  @media (min-width: @screen-md-min) {
    right: percentage(columns / @grid-columns));
  }
}

// Generate the large columns
.make-lg-columncolumns; @gutter: @grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  gutter / 2);
  padding-right: gutter / 2);

  @media (min-width: @screen-lg-min) {
    float: left;
    width: percentage(columns / @grid-columns));
  }
}
.make-lg-column-offsetcolumns) {
  @media (min-width: @screen-lg-min) {
    margin-left: percentage(columns / @grid-columns));
  }
}
.make-lg-column-pushcolumns) {
  @media (min-width: @screen-lg-min) {
    left: percentage(columns / @grid-columns));
  }
}
.make-lg-column-pullcolumns) {
  @media (min-width: @screen-lg-min) {
    right: percentage(columns / @grid-columns));
  }
}
